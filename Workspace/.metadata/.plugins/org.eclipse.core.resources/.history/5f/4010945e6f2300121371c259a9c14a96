package p1;

import gnu.io.CommPortIdentifier;
import gnu.io.SerialPort;

import java.io.IOException;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.util.List;

import p1.SerialPortTools;

public class Server {
	
	private static String commPortName = "COM1";		//TOCHANGE
	private static String portType = "gnu.io.RXTXPort";
	
	private static SerialPort sp;

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		
		
		List<CommPortIdentifier> commPortsList = SerialPortTools.findSerialPorts();
		if(!commPortsList.isEmpty()) {
			SerialPort sp = SerialPortTools.initSerialPort(commPortsList.get(0), SerialPortTools.serialPortSettings);
			if(sp.getClass().getName().compareTo(portType) == 0) {
				System.out.println("this is a port");
			}
			else {
				System.out.println("Impossible to initialize the chosen port.\n");
				System.out.println("port type : "+sp.getClass().getName());
				return;
			}
			
			
			for (CommPortIdentifier cpi : commPortsList) {
				if (cpi.getName().compareTo(commPortName) == 0)
					System.out.println("Chosen port "+cpi.getName()+" initialized.\n");
			}			
		}
		
		String message = "Hello world";
		byte [] flow = message.getBytes();
		
		try {
			System.out.println("HERE");
			//System.out.println(sp.getClass().getName());
			try {
				Thread.currentThread().sleep(1000);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			
			OutputStream outputStream = sp.getOutputStream();
			
			outputStream.write(flow);
			System.out.println("Your message has been sent to the chosen port.\n");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		
		//commPortList.get(0).
		
	}

}
